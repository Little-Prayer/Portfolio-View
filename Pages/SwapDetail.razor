@inject HttpClient Http
@inject NavigationManager NavigationManager
@using Portfolio_View.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Portfolio_View.Shared
@attribute [Authorize]
@page "/swaps/{id:int}"

@if (_swap is null)
{
    <p>読み込み中</p>
}
else
{
    <p>交換実施日：@_swap.Date.ToShortDateString()</p>
    <p>アイテム名：<a href="items/@_swap.Item?.ItemId">@(_swap.Item?.Name ?? "なし")</a></p>
    <p>メモ:@_swap.Memo</p>
    <p><button class="btn deleteBtn" @onclick="swapDelete">イベント削除</button></p>
}

@code
{

    [Parameter]
    public int id { get; set; }

    private Swap? _swap;

    protected override async Task OnInitializedAsync()

    {
        try
        {
            _swap = await Http.GetFromJsonAsync<Swap>($"swap/{id}");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

        private async Task swapDelete()
    {
        await Http.DeleteFromJsonAsync<Swap>($"swap/{id}");
        NavigationManager.NavigateTo($"items/{_swap?.Item?.ItemId}");
    }
}